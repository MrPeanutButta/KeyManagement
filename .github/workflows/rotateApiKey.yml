# This is a basic workflow to help you get started with Actions

name: RotateGMapsApiKey

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up the Google Cloud auth & SDK to help rotate the GMaps API key.
      - name: Authenticate to Google Cloud 
        uses: google-github-actions/auth@v1 
        with: 
          credentials_json: ${{ secrets.GCP_SA_KEY }} 
      
      - name: Set up Google Cloud SDK 
        uses: google-github-actions/setup-gcloud@v2 
        with: 
          project_id: ${{ secrets.GCP_PROJECT_ID }} 
          install_components: 'alpha'

      # Logs into Entra ID teanant using service pricipal credentials.
      # This allows us to access the Azure Key Vault.
      # The service principal credentials are stored in GitHub secrets.
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Get API secret from Azure Key Vault
      - uses: Azure/get-keyvault-secrets@v1
        id: gmapsApiKey
        with:
          keyvault: ${{ secrets.KEYVAULT_NAME }}
          secrets: ${{ secrets.GMAPS_API_SECRET_NAME }}

      # Use gcloud SDK to create a new API key
      # Redirect output to /dev/null because the 
      # result contains sensitive information.
      - name: Create a new GMaps API Key
        id: newGmapsApiKeyAction
        run: |
          echo "Creating a new GMaps API Key"

          echo "NEWKEY=$(gcloud alpha services api-keys create \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --display-name "GMaps API Key" \
          --format="json" 2> /dev/null | jq -r '.response.keyString')" \
          >> $GITHUB_OUTPUT
                   
      # Use Azure CLI to help store new GMaps API key in Key Vault.
      - name: Store new GMaps API Key in Azure Key Vault
        uses: azure/cli@v2
        with:
          azcliversion: 2.67.0
          inlineScript: | 
            echo "Storing new GMaps API Key in Azure Key Vault"

            az keyvault secret set \
            --vault-name ${{ secrets.KEYVAULT_NAME }} \
            --name ${{ secrets.GMAPS_API_SECRET_NAME }} \
            --value $NEWKEY


